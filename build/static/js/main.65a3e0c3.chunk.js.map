{"version":3,"sources":["assets/corazon.svg","services/posts.js","components/Notification.js","services/login.js","components/Login.js","services/register.js","components/Register.js","components/LikeButton.js","components/CommentInput.js","services/comments.js","components/CommentSection.js","components/FeedComponent.js","components/MostLiked.js","components/Navbar.js","components/SpinnerIcon.js","components/Spinner.js","components/useSpinner.js","components/NewPost.js","components/SinglePost.js","components/EditPost.js","App.js","index.js"],"names":["module","exports","baseUrlPosts","token","imageUpload","image","a","axios","post","request","data","createPost","headers","deletePost","id","delete","update","updatedPost","put","likeAPost","likedPost","getAll","get","getOne","setToken","newToken","Notification","className","message","login","credentials","response","Login","useState","username","setUsername","password","setPassword","failNotification","setFail","toHome","setToHome","handleLogin","e","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","location","reload","setTimeout","onSubmit","to","htmlFor","type","placeholder","name","onChange","target","value","register","Register","handleRegister","registerService","newUser","LikeButton","likes","setLikes","useEffect","handleLikeButton","postsService","console","log","onClick","bind","src","heart","alt","NewCommentToUpdate","onSubmitNew","onSubmitUpdate","isUpdate","newCommentValue","commentUpdateValue","setMessage","setMessageToUpdate","baseUrlComments","newComment","deleteComment","updatedComment","CommentSection","allComments","setAllComments","setUser","messageToUpdate","selectedComment","setSelectedComment","setIsUpdate","postId","loggedUserJSON","getItem","parse","commentService","abortController","AbortController","getComments","abort","handleCommentSubmit","author","length","comment","concat","handleCommentUpdateSubmit","handleDeleteCommentSubmit","confirm","error","handleUpdateComment","map","index","key","loggedUser","handleShowCommentButtons","CommentInput","FeedComponent","allPosts","deletedPost","success","handleDeletedPost","handleDeletePost","Promise","all","title","undefined","postImage","handlePostWithoutImage","content","handleShowButtons","replies","handleCommentsInput","MostLiked","setAllPost","fetchingPosts","result","reverse","mostLikedPosts","sort","b","handleLogOut","removeItem","UserGreeting","UserLogin","Greeting","isLogin","Navbar","href","width","height","viewBox","xmlns","d","SpinnerIcon","style","margin","background","display","shapeRendering","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","transform","attributeName","repeatCount","dur","values","keyTimes","Spinner","useSpinner","visible","setVisible","NewPost","setTitle","setContent","setImage","spinner","showSpinner","hideSpinner","uploadImage","imageForm","FormData","append","display_url","onChangeHandler","files","handleNewPost","newPost","addedPost","accept","SinglePost","updateFeed","setPost","useParams","history","useHistory","fetchingSinglePost","push","EditPost","onePost","setOnePost","failMessage","setFailMessage","handleUpdatePost","updatePost","fetchingOnePost","App","setSuccess","successClass","setSuccessClass","handleNewPostAdded","copyOfAllPosts","handleNotificationsSuccess","path","exact","component","posts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65a3e0c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corazon.a8cd76c1.svg\";","import axios from 'axios'\nconst baseUrlPosts = 'https://desolate-anchorage-55331.herokuapp.com/api/posts/'\nconst baseUrlLikePost = 'https://desolate-anchorage-55331.herokuapp.com/api/posts/likes/'\nconst imageUploadURL = 'https://api.imgbb.com/1/upload?expiration=600&key=fb223360f4f362805066a7186f4b1056'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst imageUpload = async image => {\n  const request = await axios.post(imageUploadURL, image)\n  return request.data\n}\n\nconst createPost = async post => {\n    const request = await axios.post(baseUrlPosts, post, {\n        headers: {\n          'Authorization': token\n        }\n      })\n    return request.data\n}\n\nconst deletePost = async id => {\n    const request = await axios.delete(baseUrlPosts+id, {\n        headers: {\n          'Authorization': token\n        }\n      })\n    return request.data\n}\n\nconst update = async (id, updatedPost) => {\n  const request = await axios.put(baseUrlPosts+id, updatedPost, {\n    headers: {\n      'Authorization': token\n    }\n  })\n  return request.data\n}\n\nconst likeAPost = async (id, likedPost) => {\n  const request = await axios.put(baseUrlLikePost+id, likedPost, {\n    headers: {\n      'Authorization': token\n    }\n  })\n  return request.data\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrlPosts)\n    return request.data\n}\n\nconst getOne = async id => {\n    const request = await axios.get(baseUrlPosts+id)\n    return request.data\n}\n\n\nexport default {\n    getAll,\n    getOne,\n    createPost,\n    deletePost,\n    update,\n    likeAPost,\n    imageUpload,\n    setToken\n}","import React from 'react'\n\nconst Notification = ({ className, message }) => {\n    if(message == null){\n        return null\n    }\n    return (   \n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrlLogin = 'https://desolate-anchorage-55331.herokuapp.com/api/login'\n\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrlLogin, credentials)\n    return response.data\n}\n\nexport default { login }","import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport loginService from '../services/login'\nimport Notification from './Notification'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [failNotification, setFail] = useState(null)\n  const [toHome, setToHome] = useState(false)\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try{\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n      setUsername('')\n      setPassword('')\n      setToHome(true)\n      window.location.reload()\n    }\n    catch(error){\n      setFail('Wrong user or password')\n      setTimeout(() => {\n        setFail(null)\n    }, 3000);\n    }\n  }\n\n  return (\n    <div className=\"max-w-sm rounded overflow-hidden shadow hover:shadow-xl flex flex-col container mx-auto py-3 mt-4 mb-5 bg-indigo-100\">\n      <form className=\"rounded px-8 pt-6 pb-8 mb-4\" onSubmit={handleLogin}>\n      <h1 className=\"font-bold py-4 text-xl p2\">Login</h1>\n      {toHome ? <Redirect to=\"/\"/> : null}\n      <Notification message={failNotification} className={\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-2\"}></Notification>\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2 pt-2\"\n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            onChange={({target}) => setUsername(target.value)}\n          />\n        </div>\n        <div className=\"mb-6\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"******************\"\n            name=\"password\"\n            onChange={({target}) => setPassword(target.value)}\n          />\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <button\n            className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            type=\"submit\"\n          >\n            Log in\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from 'axios'\nconst baseUrlUsers = 'https://desolate-anchorage-55331.herokuapp.com/api/users/'\n\nconst register = async credentials => {\n    const response = await axios.post(baseUrlUsers, credentials)\n    return response.data\n}\n\nexport default { register }","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport registerService from '../services/register'\nimport Notification from './Notification'\n\nconst Register = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [failNotification, setFail] = useState(null)\n  const [toHome, setToHome] = useState(false)\n\n  const handleRegister = async (e) => {\n    e.preventDefault()\n    try {\n      const newUser = await registerService.register({ username, password })\n\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(newUser))\n\n      setUsername('')\n      setPassword('')\n      setToHome(true)\n      window.location.reload()\n    } catch (error) {\n      setFail(\"Username and password should be at least 4 characters long!\")\n      setTimeout(() => {\n        setFail(null)\n      }, 3000);\n    }\n  }\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow hover:shadow-xl flex flex-col container mx-auto py-3 mt-4 mb-5 bg-indigo-100\">\n        <form className=\"rounded px-8 pt-6 pb-8 mb-4\" onSubmit={handleRegister}>\n            <h1 className=\"font-bold py-4 text-xl\">Register</h1>\n            {toHome ? <Redirect to=\"/\"/> : null}\n            <Notification message={failNotification} className={\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 mb-2 rounded relative\"}></Notification>\n          <div className=\"mb-4\">\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"username\"\n            >\n              Username  \n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              onChange={({target}) => setUsername(target.value)}\n            />\n          </div>\n          <div className=\"mb-6\">\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"password\"\n            >\n              Password\n            </label>\n            <input\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"******************\"\n              name=\"password\"\n              onChange={({target}) => setPassword(target.value)}\n            />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <button\n              className=\"bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n              type=\"submit\"\n            >\n              Sign In\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n}\n\n\nexport default Register","import React, { useState, useEffect } from 'react'\nimport postsService from '../services/posts'\nimport heart from '../assets/corazon.svg'\n\nconst LikeButton = ({post}) => {\n    const [likes, setLikes] = useState(0)\n    \n    useEffect(() => {\n      setLikes(post.likes) \n    }, [post])\n  \n    const handleLikeButton = async (id) => {\n      try {\n        const likedPost = await postsService.getOne(id)\n        ++likedPost.likes\n        await postsService.likeAPost(id, likedPost)\n        setLikes(likedPost.likes)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  \n    return(\n      <div className=\"content-between\">\n      <button\n      onClick={handleLikeButton.bind(this, post.id)}\n      className=\"bg-transparent hover:bg-red-500 text-red-700 font-semibold hover:text-white py-1 px-2 border border-red-500 hover:border-transparent rounded\"\n      >\n      <img className=\"w-6\" src={heart} alt=\"Heart from like button\"></img>\n      <span>{likes}</span>\n      </button>\n      </div>\n    )\n  }\n\n  export default LikeButton","import React from 'react'\n\nconst NewCommentToUpdate = ({ onSubmitNew, onSubmitUpdate, isUpdate, newCommentValue, commentUpdateValue , setMessage, setMessageToUpdate }) => {\n\n    if(!isUpdate){\n      return (\n      <form className=\"m-2\" onSubmit={onSubmitNew}>     \n        <input \n        className=\"bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\" \n        type=\"text\" \n        placeholder=\"Add comment\"\n        name=\"message\"\n        value={newCommentValue}\n        onChange={({target}) => setMessage(target.value)}\n        />\n      </form> \n    )\n    }\n    return (\n    <form className=\"m-2\" onSubmit={onSubmitUpdate}>     \n        <input \n        className=\"bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 block w-full appearance-none leading-normal\" \n        type=\"text\"\n        name=\"message\"\n        value={commentUpdateValue}\n        onChange={({target}) => setMessageToUpdate(target.value)}\n        />\n    </form>\n    )\n  }\n\nexport default NewCommentToUpdate","import axios from 'axios'\nconst baseUrlComments = 'https://desolate-anchorage-55331.herokuapp.com/api/replies/'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async id => {\n    const response = await axios.get(baseUrlComments+id)\n    return response.data\n}\n\nconst newComment = async (id, message) => {\n    const response = await axios.post(baseUrlComments+id, message, {\n        headers: {\n          'Authorization': token\n        }\n      })\n    return response.data\n}\n\nconst deleteComment = async id => {\n    const response = await axios.delete(baseUrlComments+id, {\n      headers: {\n        'Authorization': token\n      }\n    })\n    return response.data\n}\n\nconst update = async (id, updatedComment) => {\n  const response = await axios.put(baseUrlComments+id, updatedComment, {\n    headers: {\n      'Authorization': token\n    }\n  })\n  return response.data\n}\n\nexport default { \n  setToken, \n  newComment,\n  deleteComment,\n  update,\n  getAll \n}","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport CommentInput from './CommentInput'\nimport commentService from '../services/comments'\n\n\nconst CommentSection = ({ id }) => {\n    const [allComments , setAllComments] = useState([])\n    const [message, setMessage] = useState('')\n    const [failNotification, setFail] = useState(null)\n    const [user, setUser] = useState(null)\n    const [messageToUpdate, setMessageToUpdate] = useState(null)\n    const [selectedComment, setSelectedComment] = useState(null)\n    const [isUpdate, setIsUpdate] = useState(false)\n    let postId = id\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        if(loggedUserJSON) {\n          const user = JSON.parse(loggedUserJSON)\n          setUser(user)\n          commentService.setToken(user.token)\n        }\n      }, [])\n    \n    useEffect(() => {\n      const abortController = new AbortController()\n        const getComments = async () => {\n          try {\n          const allComments = await commentService.getAll(postId)\n          setAllComments(allComments)\n        } catch (error) {\n          throw error;\n        }\n      } \n    getComments()\n    return () => abortController.abort()\n    }, [postId])\n\n\n    const handleCommentSubmit = async (e) => {\n      e.preventDefault()\n      try {\n          const newComment = { message: message, author: user.username}\n          if(newComment.message === '' || newComment.message.length < 4){\n              setFail('Comment needs to be at least 4 character long')\n              setTimeout(() => {\n                  setFail(null)\n              }, 3000);\n              return\n          } else {\n          const comment = await commentService.newComment(id, newComment)\n          setMessage(' ')\n          setAllComments(allComments.concat(comment))\n          }\n      } catch (error) {\n          setFail('Something went wrong')\n          setTimeout(() => {\n              setFail(null)\n          }, 3000);\n      }\n  }\n\n  const handleCommentUpdateSubmit = async (e) => {\n    e.preventDefault()\n      try {\n        await commentService.update(selectedComment.id, { message: messageToUpdate })\n        setAllComments(await commentService.getAll(postId))\n        setIsUpdate(false)\n      } catch (error) {\n        console.log(error)\n      }\n  }\n\n\n    const handleDeleteCommentSubmit = async (id) => {\n      try {\n        const result = window.confirm('Do you really want to delete this comment?')\n        if(result){\n            await commentService.deleteComment(id) \n            setAllComments(await commentService.getAll(postId))\n        }\n        return\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    const handleUpdateComment = comment => {\n      if(isUpdate){\n        return setIsUpdate(false)\n      }\n      setIsUpdate(true)\n      setSelectedComment(comment)\n      setMessageToUpdate(comment.message)\n    }\n\n\n    const handleShowCommentButtons = (comment) => {\n        const loggedUser = JSON.parse(window.localStorage.getItem('loggedUser'))\n        if (!user){\n          return null\n        } else if(loggedUser.username !== comment.author){\n          return null\n        }\n      return (\n          <>\n          <span className=\"px-6 text-sm\"> \n            <span className=\"hover:text-indigo-300 hover:border-indigo-600 border-b border-gray-600 mx-2\" onClick={handleDeleteCommentSubmit.bind(this, comment.id)}>Delete</span> \n            <span className=\"hover:text-indigo-300 hover:border-indigo-600 border-b border-gray-600\"  onClick={handleUpdateComment.bind(this, comment)}>Edit</span> \n          </span>\n          </>\n      )\n    }\n      \n    return (\n        <>\n        <ul className=\"px-4 divide-y divide-gray-400 list-none\">\n        {allComments.map((comment, index) => \n          <li key={index} className=\"bg-indigo-100 font-light text-gray-700 py-2 break-words\">\n            {comment.message} - <span className=\"font-bold\">{comment.author}</span> {handleShowCommentButtons(comment)}\n          </li>\n        )}\n        </ul>\n            <Notification message={failNotification} className={\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-2\"}></Notification>\n            <CommentInput \n            isUpdate={isUpdate}\n            onSubmitNew={handleCommentSubmit} \n            onSubmitUpdate={handleCommentUpdateSubmit} \n            newCommentValue={message} \n            commentUpdateValue={messageToUpdate}\n            setMessage={setMessage} \n            setMessageToUpdate={setMessageToUpdate}\n            >\n            </CommentInput>\n        </>\n    )\n}\n\nexport default CommentSection\n","import React, { useEffect, useState } from 'react'\nimport LikeButton from './LikeButton'\nimport CommentSection from './CommentSection'\nimport postsService from '../services/posts'\nimport { Link } from 'react-router-dom'\n\nconst FeedComponent = ({allPosts, deletedPost, success}) => {\n    const [user, setUser] = useState(null)\n    const handleDeletedPost = deletedPost\n\n\n    useEffect(() => {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if(loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON)\n        setUser(user)\n        postsService.setToken(user.token)\n      }\n    }, [])\n\n    const handleDeletePost = async (id) => {\n      const result = window.confirm('Do you really want to delete this post?')\n      if(result){\n        const resultAsync = Promise.all(\n          await postsService.deletePost(id),\n          await handleDeletedPost()\n        )\n        \n        if(resultAsync){\n          success('Post has been deleted.', \"flex items-center bg-green-500 text-white text-sm font-bold px-4 py-3 mx-24 rounded\") \n        }\n      }\n      return\n    }\n\n  const handleShowButtons = (post) => {\n      const loggedUser = JSON.parse(window.localStorage.getItem('loggedUser'))\n      if (!user){\n        return null\n      } else if(loggedUser.username !== post.author){\n        return null\n      }\n\n      return (\n          <div className=\"ml-auto\">\n          <button className=\"inline-block bg-red-200 rounded-full px-3 py-1 mr-2 text-sm font-semibold text-red-700 \" onClick={handleDeletePost.bind(this, post.id)}>Delete</button>\n          <Link to={'/edit/'+post.id}><button className=\"inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-blue-700 \">Edit</button></Link>\n          </div>\n      )\n    } \n\n    const handlePostWithoutImage = (post) => {\n      if(post.postImage === undefined){\n        return <br/>\n      } else {\n        return <img src={post.postImage} className=\"px-2 object-cover mb-5\" alt=\"Post thumbnail\"></img>\n      }\n    }\n\n    const handleCommentsInput = (postId, post) => {\n      if(!user){\n        if(post.replies){\n          return (\n            post.replies.map((comment, index) => \n            <ul  key={index} className=\"px-4 divide-y divide-gray-400\">\n              <li key={comment.id} className=\"bg-indigo-100 font-light text-gray-700 py-2\">\n                {comment.message} - <span className=\"font-bold\">{comment.author}</span>\n              </li>\n            </ul>\n            )\n          )\n        }\n      } else {\n        return <CommentSection id={postId}></CommentSection>\n      }\n    }\n\n    return ( \n        allPosts.map(post => \n        <div key={post.id} className=\"max-w-sm rounded overflow-hidden shadow hover:shadow-xl flex flex-col container mx-auto py-3 px-4 mt-4 mb-5 bg-indigo-100\">\n          <h2 className=\"text-3xl px-2 py-2 font-bold\">{post.title}</h2>\n          {handlePostWithoutImage(post)}\n          <p className=\"font-bold text-purple-500 text-xl-mb-2 px-5\">Author: {post.author}</p>\n          <p className=\"py-3 px-5 break-words\">{post.content}</p>\n\n          <div className=\"flex items-end m-3\">\n          <LikeButton post={post}></LikeButton>\n          {handleShowButtons(post)}\n          </div>\n          <div>\n            <h3 className=\"text-2xl font-bold px-4 \">Comments</h3>\n            {handleCommentsInput(post.id, post)}\n          </div>\n        </div>\n        )\n    )\n}\n\nexport default FeedComponent","import React, { useState, useEffect }  from 'react'\nimport { Link } from 'react-router-dom'\nimport postsService from '../services/posts'\n\nconst MostLiked = () => {\n    const [allPosts, setAllPost] = useState([])\n\n    const fetchingPosts = async () => {\n        const result = await postsService.getAll()\n        setAllPost(result.reverse())\n      }    \n\n    useEffect(() => {\n        fetchingPosts()\n      }, [])\n  \n    \n    const mostLikedPosts = \n        allPosts.sort( (a, b) => {\n        if (a.likes < b.likes) {\n          return 1;\n        }\n        if (a.likes > b.likes) {\n          return -1;\n        }\n        return 0;\n      })\n\n    const handlePostWithoutImage = (post) => {\n    if(post.postImage === undefined){\n        return <br/>\n    }\n    return <img src={post.postImage} className=\"px-2 object-cover mb-5\" alt=\"Post thumbnail\"></img>\n    }\n\n    return (\n        mostLikedPosts.map( (post, index) => \n            <div key={index} className=\"max-w-sm rounded overflow-hidden shadow hover:shadow-xl flex flex-col container mx-auto py-3 px-4 mt-4 mb-5 bg-indigo-100\">\n                <h1 className=\"text-2xl px-2 py-2 font-bold\">{post.title}</h1>\n                {handlePostWithoutImage(post)}\n                <p className=\"font-bold text-purple-500 text-xl-mb-2 px-5\">Posted by: {post.author}</p>\n                <p className=\"font-bold text-red-500 text-xl-mb-2 px-5\">Likes: {post.likes}</p>\n                <p className=\"py-3 px-5 break-words\">{post.content}</p>\n                <Link to={'/post/'+post.id} className=\"font-bold bg-indigo-200 hover:bg-indigo-400 text-center\">\n                  <button>Go to this post</button>\n                </Link>\n            </div>\n        )\n    )\n}\n\nexport default MostLiked","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst handleLogOut = () => {\n  window.localStorage.removeItem('loggedUser')\n  window.location.reload()\n}\n\nconst UserGreeting = ({ user }) => {\n  return (\n    <>\n    <li className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent\">Hello, <strong>{user.username}</strong>!</li>\n    <li className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-500\" onClick={handleLogOut}>Log Out</li>\n    </>\n  )\n}\n\nconst UserLogin = () => {\n  return (\n    <>\n    <li><Link className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-500\" to='/register'>Register</Link></li>\n    <li><Link className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-500\" to='/login'>Login</Link></li>\n    </>\n  )\n}\n\nconst Greeting = ({isLogin, username}) => {\n  if (isLogin) {\n    return <UserGreeting user={username}/>\n  }\n  return <UserLogin/>\n}\n\nconst Navbar = () => {\n  const user = JSON.parse(window.localStorage.getItem('loggedUser'))\n  const handleGreeting = () => {\n    if(user === null){\n      return false\n    }\n    return true\n    }\n    return (\n      <nav className=\"lg:px-16 px-6 bg-white flex flex-wrap items-center lg:py-0 py-2 shadow-lg\" >\n          <div className=\"flex-1 flex justify-between items-center\">\n            <a href=\"/\">\n              <svg width=\"32\" height=\"36\" viewBox=\"0 0 32 36\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.922 35.798c-.946 0-1.852-.228-2.549-.638l-10.825-6.379c-1.428-.843-2.549-2.82-2.549-4.501v-12.762c0-1.681 1.12-3.663 2.549-4.501l10.825-6.379c.696-.41 1.602-.638 2.549-.638.946 0 1.852.228 2.549.638l10.825 6.379c1.428.843 2.549 2.82 2.549 4.501v12.762c0 1.681-1.12 3.663-2.549 4.501l-10.825 6.379c-.696.41-1.602.638-2.549.638zm0-33.474c-.545 0-1.058.118-1.406.323l-10.825 6.383c-.737.433-1.406 1.617-1.406 2.488v12.762c0 .866.67 2.05 1.406 2.488l10.825 6.379c.348.205.862.323 1.406.323.545 0 1.058-.118 1.406-.323l10.825-6.383c.737-.433 1.406-1.617 1.406-2.488v-12.757c0-.866-.67-2.05-1.406-2.488l-10.825-6.379c-.348-.21-.862-.328-1.406-.328zM26.024 13.104l-7.205 13.258-3.053-5.777-3.071 5.777-7.187-13.258h4.343l2.803 5.189 3.107-5.832 3.089 5.832 2.821-5.189h4.352z\"></path></svg>\n          </a>\n        </div>\n    \n        <label htmlFor=\"menu-toggle\" className=\"pointer-cursor lg:hidden block\"><svg className=\"fill-current text-gray-900\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><title>menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"></path></svg></label>\n        <input className=\"hidden\" type=\"checkbox\" id=\"menu-toggle\" />\n        <div className=\"hidden lg:flex lg:items-center lg:w-auto w-full\" id=\"menu\">\n          <nav>\n            <ul className=\"lg:flex items-center justify-between text-base text-gray-700 pt-4 lg:pt-0\">\n            <li><Link className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-500 lg:mb-0 mb-2\" to='/mostliked'>Most Liked</Link></li>\n            <li><Link className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-500 lg:mb-0 mb-2\" to='/'>Feed</Link></li>\n              <Greeting isLogin={handleGreeting()} username={user}></Greeting>\n            </ul>\n          </nav>\n        </div>\n      </nav>\n      ) \n    }\nexport default Navbar","import React from 'react'\n\nconst SpinnerIcon = () => {\n    const spinnerStyle = {\n        margin: \"auto\" ,\n        background: \"none\" ,\n        display: \"block\" ,\n        shapeRendering: \"auto\" \n    }\n    return (\n        <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={spinnerStyle} width=\"231px\" height=\"151px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke=\"#93dbe9\" strokeWidth=\"7\" r=\"28\" strokeDasharray=\"131.94689145077132 45.982297150257104\" transform=\"rotate(201.962 50 50)\">\n            <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"1.0416666666666665s\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\"></animateTransform>\n        </circle>\n        </svg>\n    </div>\n    )\n}\n\nexport default SpinnerIcon\n","import React from 'react'\nimport SpinnerIcon from './SpinnerIcon'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <SpinnerIcon></SpinnerIcon>\n        </div>\n    )\n}\n\nexport default Spinner","import React, { useState } from 'react'\nimport Spinner from './Spinner'\n\nconst useSpinner = () => {\n    const [visible, setVisible] = useState(false)\n    \n    const showSpinner = () => setVisible(true)\n    const hideSpinner = () => setVisible(false)\n    const spinner = visible ? <Spinner/> : null\n\n    return [spinner, showSpinner, hideSpinner]\n}\n\nexport default useSpinner","import React, { useState, useEffect } from 'react'\nimport postsService from '../services/posts'\nimport useSpinner from './useSpinner'\n\nconst NewPost = ({allPosts}) => {\n    const [user, setUser] = useState(null)\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState(null)\n    const [spinner, showSpinner, hideSpinner] = useSpinner()\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        if(loggedUserJSON){\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n        postsService.setToken(user.token)\n        }\n    }, [])\n\n    const uploadImage = async (image) => {\n        try {\n        const imageForm = new FormData()\n        imageForm.append('image', image)\n        const result = await postsService.imageUpload(imageForm)\n        setImage(result.data.display_url)\n        } catch (error) {\n          console.log(error)  \n        }  \n    }\n\n    const onChangeHandler = async (e) => {\n        e.preventDefault()\n        showSpinner()\n        await uploadImage(e.target.files[0]) \n        setTimeout(() => {\n            hideSpinner()\n        }, 2000)\n    }\n\n    const handleNewPost = async (e) => {\n        e.preventDefault()\n        try {\n            const newPost = {\n                title: title,\n                content: content,\n                postImage: image\n            }\n            const addedPost = await postsService.createPost(newPost)\n            setTitle('')\n            setContent('')\n            allPosts(addedPost)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    if(!user){\n        return null\n    }\n    return (\n    <div className=\"mb-12 mt-5 max-w-sm mx-auto md:max-w-lg lg:max-w-3xl\">\n        <form className=\"bg-white shadow-md rounded px-16 pt-6 pb-8 mb-4\" onSubmit={handleNewPost}>\n            <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"title\">\n                Title\n            </label>\n            <input \n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n                id=\"title\" \n                type=\"text\" \n                placeholder=\"Title\"\n                value={title}\n                onChange={({target}) => setTitle(target.value)}\n            />\n            </div>\n            <div className=\"mb-6\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"content\">\n                Content\n            </label>\n            <textarea \n                className=\"resize-none border w-full h-20 rounded focus:outline-none focus:shadow-outline py-2 px-3\" \n                id=\"content\" \n                type=\"text\" \n                placeholder=\"Content\"\n                value={content}\n                onChange={({target}) => setContent(target.value)}\n            ></textarea>\n            </div>\n            <div className=\"flex w-full h-auto items-center justify-center bg-grey-lighter\">\n                <label className=\"flex flex-col items-center px-4 py-2 bg-white text-blue-500 rounded-lg shadow-lg tracking-wide uppercase border border-blue-100 cursor-pointer hover:bg-blue-500 hover:text-white\">\n                    <svg className=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n                    </svg>\n                    <span className=\"mt-2 text-base leading-normal\">Select a file</span>\n                    <input type='file' className=\"hidden\" accept=\"image/*\" onChange={onChangeHandler}/>\n                </label>\n            </div>\n            {spinner}\n            <div className=\"flex items-center justify-center mt-8\">\n            <button className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n                Submit post \n            </button>\n            </div>\n        </form>\n    </div>\n    )\n}\n\nexport default NewPost","import React, { useEffect, useState } from 'react'\nimport postsService from '../services/posts'\nimport LikeButton from './LikeButton'\nimport CommentSection from './CommentSection'\nimport { useParams, Link, useHistory } from \"react-router-dom\";\n\n\n\nconst SinglePost = ({ updateFeed }) => {\n    const [post, setPost] = useState([])\n    const { id } = useParams()\n    const [user, setUser] = useState(null)\n    const history = useHistory()\n\n    const fetchingPosts = async () => {\n      const result = await postsService.getAll()\n      updateFeed(result.reverse())\n    }    \n\n    useEffect(() => {\n      const abortController = new AbortController()\n      const fetchingSinglePost = async () => {\n        const result = await postsService.getOne(id)\n        setPost(result)\n      }\n    fetchingSinglePost()\n    return () => abortController.abort()\n    }, [id])\n\n    useEffect(() => {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if(loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON)\n        setUser(user)\n        postsService.setToken(user.token)\n      }\n    }, [])\n\n    const handleDeletePost = async (id) => {\n      const result = window.confirm('Do you really want to delete this post?')\n      if(result){\n        await postsService.deletePost(id)\n        fetchingPosts()\n        return history.push('/')\n      }\n      return\n    }\n\n  const handleShowButtons = () => {\n      const loggedUser = JSON.parse(window.localStorage.getItem('loggedUser'))\n      if (!user){\n        return null\n      } else if(loggedUser.username !== post.author){\n        return null\n      }\n\n      return (\n          <div className=\"ml-auto\">\n          <button className=\"inline-block bg-red-200 rounded-full px-3 py-1 mr-2 text-sm font-semibold text-red-700 \" onClick={handleDeletePost.bind(this, post.id)}>Delete</button>\n          <Link to={'/edit/'+post.id}><button className=\"inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-blue-700 \">Edit</button></Link>\n          </div>\n      )\n    } \n\n    const handlePostWithoutImage = () => {\n      if(post.postImage === undefined){\n        return <br/>\n      }\n      return <img src={post.postImage} className=\"px-2 object-cover mb-5\" alt=\"Post thumbnail\"></img>\n    }\n\n    const handleCommentsInput = () => {\n        if(!user){\n          if(post.replies){\n            return (\n              post.replies.map((comment, index) => \n              <ul  key={index} className=\"px-4 divide-y divide-gray-400\">\n                <li key={comment.id} className=\"bg-indigo-100 font-light text-gray-700 py-2\">\n                  {comment.message} - <span className=\"font-bold\">{comment.author}</span>\n                </li>\n              </ul>\n              )\n            )\n          }\n        } else if(!post.replies){\n          return <br></br> \n        } else {\n          return <CommentSection id={post.id}></CommentSection>\n        }\n    }\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow hover:shadow-xl flex flex-col container mx-auto py-3 px-4 mt-4 mb-5 bg-indigo-100\">\n          <h2 className=\"text-3xl px-2 py-2 font-bold\">{post.title}</h2>\n           {handlePostWithoutImage()} \n          <p className=\"font-bold text-purple-500 text-xl-mb-2 px-5\">Author: {post.author}</p>\n          <p className=\"py-3 px-5 break-words\">{post.content}</p>\n\n          <div className=\"flex items-end m-3\">\n            <LikeButton post={post}></LikeButton>\n            {handleShowButtons()}\n          </div>\n          <div>\n            <h3 className=\"text-2xl font-bold px-4 \">Comments</h3>\n              {handleCommentsInput()}\n          </div>\n        </div>\n    )\n}\n\nexport default SinglePost","import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport postsService from '../services/posts'\nimport Notification from './Notification'\n\nconst EditPost = ({ updateFeed }) => {\n    const [onePost, setOnePost] = useState([])\n    const [content, setContent] = useState('')\n    const [title, setTitle] = useState('')\n    const [failMessage, setFailMessage] = useState(null)\n    let history = useHistory();\n    const id = useParams().id\n\n    const fetchingPosts = async () => {\n        const result = await postsService.getAll()\n        updateFeed(result.reverse())\n    }    \n\n\n    const handleUpdatePost = async (e) => {\n        e.preventDefault()\n        try {\n            const updatePost = {\n                title: title,\n                content: content\n            }\n            await postsService.update(id, updatePost)\n            fetchingPosts()\n            history.push('/')\n        } catch (error) {\n            console.error(error)\n            setFailMessage('Add some content to the post! (4 characters min.)')\n            setTimeout(() => {\n                setFailMessage(null)\n            }, 3000);\n        }\n    }\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        if(loggedUserJSON) {\n          const user = JSON.parse(loggedUserJSON)\n          postsService.setToken(user.token)\n        }\n      }, [])\n    \n    useEffect(() => {\n        const fetchingOnePost = async () => {\n            try {\n                const result = await postsService.getOne(id)\n                delete result.postImage\n                delete result.replies\n        \n                setOnePost(result)\n            } catch (error) {\n                console.error(error)\n            }\n        }\n        fetchingOnePost()\n    }, [id])\n\n    return (       \n    <form onSubmit={handleUpdatePost}>\n        <div className=\"max-w-sm rounded overflow-hidden shadow hover:shadow-xl flex flex-col container mx-auto py-3 px-4 mt-4 mb-5 bg-indigo-100\">\n        <Notification className={'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative'} message={failMessage}></Notification>\n        <h1 className=\"text-xl px-2 py-3 font-bold\">Edit the post called \"{onePost.title}\"</h1>\n        <label\n        className=\"block text-gray-700 text-sm font-bold mb-2 pt-2\"\n        htmlFor=\"title\"\n        >\n        Title:\n        </label>\n            <input \n            className=\"text-3xl px-2 font-bold\"\n            placeholder={onePost.title}\n            value={title}\n            onChange={({target}) => setTitle(target.value)}\n            >\n            </input>\n        <label\n        className=\"block text-gray-700 text-sm font-bold mb-2 pt-2\"\n        htmlFor=\"content\"\n        >\n        Content:\n        </label>\n            <textarea \n            className=\"resize-none border w-full h-20 rounded focus:outline-none focus:shadow-outline py-2 px-3\" \n            id=\"content\" \n            type=\"text\" \n            placeholder={onePost.content}\n            value={content}\n            onChange={({target}) => setContent(target.value)}\n            >\n        </textarea>\n        <button \n        className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline my-3\" \n        type=\"submit\"\n        >\n            Submit post \n        </button>\n    </div>\n  </form> \n  )\n}\n\nexport default EditPost","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport postsService from './services/posts'\nimport Notification from './components/Notification'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport FeedComponent from './components/FeedComponent'\nimport MostLiked from './components/MostLiked'\nimport Navbar from './components/Navbar'\nimport NewPost from './components/NewPost'\nimport SinglePost from './components/SinglePost'\nimport EditPost from './components/EditPost'\n\nconst App = () => {\n  const [allPosts , setAllPost] = useState([])\n  const [success, setSuccess] = useState('')\n  const [successClass, setSuccessClass] = useState(null)\n\n  const fetchingPosts = async () => {\n    try {\n      const result = await postsService.getAll()\n        setAllPost(result.reverse())\n    } catch (error) {\n      console.log(error)\n    }\n  }    \n\n  const handleNewPostAdded = (addedPost) => {\n    const copyOfAllPosts = [addedPost, ...allPosts]\n    setAllPost(copyOfAllPosts)\n  }\n  \n  const handleNotificationsSuccess = (message, success) => {\n    setSuccess(message)\n    setSuccessClass(success)\n    setTimeout(() => {\n      setSuccess(null)\n      setSuccessClass(null)\n    }, 3000);\n  }\n\n  useEffect(() => {\n      fetchingPosts()\n    }, [])\n\n  const MostLikedWrapper = () => {\n    return <MostLiked posts={allPosts}></MostLiked>\n  }\n\n  const FeedComponentWrapper = () => {\n    return( \n    <>\n    <NewPost allPosts={handleNewPostAdded}></NewPost>\n    <Notification message={success} className={successClass}></Notification>\n    <FeedComponent allPosts={allPosts} deletedPost={fetchingPosts} success={handleNotificationsSuccess}></FeedComponent>\n    </>\n    )\n  }\n\n  const EditPostWrapper = () => {\n    return <EditPost updateFeed={setAllPost}></EditPost>\n  }\n\n  const SinglePostWrapper = () => {\n    return <SinglePost updateFeed={setAllPost}></SinglePost>\n  }\n\n  return (\n    <Router>\n    <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route path=\"/\" exact component={FeedComponentWrapper}/>\n          <Route path=\"/mostliked\" component={MostLikedWrapper}/>\n          <Route path=\"/post/:id\" component={SinglePostWrapper}/>\n          <Route path=\"/edit/:id\" component={EditPostWrapper}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/register\" component={Register}/>\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}